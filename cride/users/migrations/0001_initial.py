# Generated by Django 3.0.14 on 2021-07-14 22:04

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='Date time on wich the objects was created', verbose_name='created at')),
                ('modified', models.DateTimeField(auto_now=True, help_text='Date time on wich the objects was last modified', verbose_name='modified at')),
                ('email', models.EmailField(error_messages={'unique': 'A user with that email already exists.'}, max_length=255, unique=True, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('is_client', models.BooleanField(default=True, help_text='Designates whether the user is client.Helps easily distinguish user and perform queriesClients are the main type of user', verbose_name='client status')),
                ('is_verified', models.BooleanField(default=False, help_text='Set to True when the user have verified its email', verbose_name='veridied client')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('ast_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('phone_number', models.CharField(blank=True, max_length=17, validators=[django.core.validators.RegexValidator(message='Phone number must entered be entered in format: +9999999999. Up to 15 digits allowed', regex='\\+?1?\\d{9,15}$')], verbose_name='phone number')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
        ),
    ]
